package com.example.OnlineRecruitment.Entities.Generators;

import java.io.Serializable;

import org.hibernate.engine.spi.SharedSessionContractImplementor;
import org.hibernate.id.IdentifierGenerator;
import org.springframework.stereotype.Component;

import com.example.OnlineRecruitment.Entities.Role;

import jakarta.persistence.EntityManager;
import jakarta.persistence.Persistence;
import jakarta.persistence.Query;

@Component
public class CustomIdGenerator implements IdentifierGenerator {

    @Override
    public Serializable generate(SharedSessionContractImplementor session, Object object) {
        EntityManager em = null;
        try {
            em = Persistence.createEntityManagerFactory("default").createEntityManager();
            em.getTransaction().begin();

            String prefix = "";
            if (object instanceof Role) {
                Role role = (Role) object;
                if ("Graduate".equals(role.getRoleTitle())) {
                    prefix = "Graduate";
                    System.out.println("This is graduate");
                } else if ("Employer".equals(role.getRoleTitle())) {
                    prefix = "EMP";
                    System.out.println("This is employer");
                }

                Query q = em.createQuery("SELECT COUNT(r) FROM Role r WHERE r.roleId LIKE :prefix");
                q.setParameter("prefix", prefix + "%");
                int count = ((Number) q.getSingleResult()).intValue();

                Long nextNumber = (count == 0) ? 1L : (count + 1);

                em.getTransaction().commit();

                // Construct the custom ID
                return prefix + String.format("%04d", nextNumber);
            } else {
                throw new IllegalArgumentException("Object is not of type Role");
            }
        } finally {
            if (em != null && em.isOpen()) {
                em.close();
            }
        }
    }
}
